[tool:pytest]
# Pytest configuration for i18n tests

# Test discovery
testpaths = tests
python_files = test_i18n_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for end-to-end workflows
    frontend: Frontend JavaScript and browser tests
    quality: Translation quality and validation tests
    slow: Tests that take longer to run
    requires_selenium: Tests that require Selenium WebDriver
    requires_database: Tests that require database setup
    requires_api: Tests that require API endpoints

# Test output configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --disable-warnings

# Minimum version requirements
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution (if pytest-xdist is available)
# addopts = -n auto

# Coverage configuration (if pytest-cov is available)
# addopts = --cov=app.utils.i18n --cov=app.services.translation_service --cov=app.services.localization_service --cov=app.services.email_localization_service --cov-report=html --cov-report=term-missing

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test environment variables
env =
    TESTING = true
    FLASK_ENV = testing
    DATABASE_URL = sqlite:///:memory:
    SECRET_KEY = test-secret-key-for-i18n-tests
    WTF_CSRF_ENABLED = false