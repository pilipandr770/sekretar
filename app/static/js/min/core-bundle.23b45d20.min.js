class BrowserCompatibility{constructor(){this.userAgent = navigator.userAgent;this.browserInfo = this.detectBrowser();this.features = this.checkFeatures();this.webSocketSupport = this.checkWebSocketSupport();this.init();}init(){console.log('Browser detected:',this.browserInfo);console.log('Feature support:',this.features);console.log('WebSocket support:',this.webSocketSupport);this.showCompatibilityWarnings();this.applyPolyfills();this.setupFallbacks();}detectBrowser(){const ua = this.userAgent;if(ua.includes('Chrome')&& !ua.includes('Edg')){const version = ua.match(/Chrome\/(\d+)/)?.[1];return{name: 'Chrome',version: parseInt(version),isSupported: parseInt(version)>= 80};}if(ua.includes('Firefox')){const version = ua.match(/Firefox\/(\d+)/)?.[1];return{name: 'Firefox',version: parseInt(version),isSupported: parseInt(version)>= 75};}if(ua.includes('Safari')&& !ua.includes('Chrome')){const version = ua.match(/Version\/(\d+)/)?.[1];return{name: 'Safari',version: parseInt(version),isSupported: parseInt(version)>= 13};}if(ua.includes('Edg')){const version = ua.match(/Edg\/(\d+)/)?.[1];return{name: 'Edge',version: parseInt(version),isSupported: parseInt(version)>= 80};}if(ua.includes('MSIE')|| ua.includes('Trident')){return{name: 'Internet Explorer',version: 0,isSupported: false};}return{name: 'Unknown',version: 0,isSupported: false};}checkFeatures(){return{es6Classes: this.checkES6Classes(),es6Modules: this.checkES6Modules(),promises: 'Promise' in window,asyncAwait: this.checkAsyncAwait(),fetch: 'fetch' in window,customElements: 'customElements' in window,shadowDOM: 'attachShadow' in Element.prototype,localStorage: this.checkLocalStorage(),sessionStorage: this.checkSessionStorage(),indexedDB: 'indexedDB' in window,webSocket: 'WebSocket' in window,eventSource: 'EventSource' in window,intersectionObserver: 'IntersectionObserver' in window,mutationObserver: 'MutationObserver' in window,performanceObserver: 'PerformanceObserver' in window,cssGrid: this.checkCSSGrid(),cssFlexbox: this.checkCSSFlexbox(),cssCustomProperties: this.checkCSSCustomProperties(),webRTC: this.checkWebRTC(),mediaDevices: 'mediaDevices' in navigator,crypto: 'crypto' in window && 'subtle' in window.crypto,notifications: 'Notification' in window,serviceWorker: 'serviceWorker' in navigator};}checkES6Classes(){try{eval('class Test{}');return true;}catch(e){return false;}}checkES6Modules(){return 'noModule' in document.createElement('script');}checkAsyncAwait(){try{eval('async function test(){await Promise.resolve();}');return true;}catch(e){return false;}}checkLocalStorage(){try{const test = 'test';localStorage.setItem(test,test);localStorage.removeItem(test);return true;}catch(e){return false;}}checkSessionStorage(){try{const test = 'test';sessionStorage.setItem(test,test);sessionStorage.removeItem(test);return true;}catch(e){return false;}}checkCSSGrid(){return CSS.supports('display','grid');}checkCSSFlexbox(){return CSS.supports('display','flex');}checkCSSCustomProperties(){return CSS.supports('--test','test');}checkWebRTC(){return 'RTCPeerConnection' in window || 'webkitRTCPeerConnection' in window;}checkWebSocketSupport(){if(!this.features.webSocket){return{supported: false,reason: 'WebSocket API not available'};}const support ={supported: true,features:{basicWebSocket: true,binaryType: 'binaryType' in WebSocket.prototype,extensions: 'extensions' in WebSocket.prototype,protocol: 'protocol' in WebSocket.prototype}};try{const testSocket = new WebSocket('ws://test');testSocket.close();support.canCreate = true;}catch(error){support.canCreate = false;support.createError = error.message;}return support;}showCompatibilityWarnings(){const warnings = [];if(!this.browserInfo.isSupported){warnings.push({type: 'browser',message: `Your browser(${this.browserInfo.name})may not be fully supported. Please consider upgrading to a modern browser.`,severity: 'high'});}if(!this.features.promises){warnings.push({type: 'feature',message: 'Promise support is required for this application to work properly.',severity: 'high'});}if(!this.features.fetch){warnings.push({type: 'feature',message: 'Fetch API not supported. Using XMLHttpRequest fallback.',severity: 'medium'});}if(!this.features.localStorage){warnings.push({type: 'feature',message: 'Local storage not available. Some features may not work properly.',severity: 'medium'});}if(!this.webSocketSupport.supported){warnings.push({type: 'websocket',message: 'WebSocket not supported. Real-time features will be disabled.',severity: 'medium'});}this.displayWarnings(warnings);}displayWarnings(warnings){const highSeverityWarnings = warnings.filter(w => w.severity === 'high');const mediumSeverityWarnings = warnings.filter(w => w.severity === 'medium');if(highSeverityWarnings.length > 0){this.showWarningModal(highSeverityWarnings);}mediumSeverityWarnings.forEach(warning =>{console.warn(`Compatibility warning(${warning.type}):`,warning.message);});document.dispatchEvent(new CustomEvent('browser:compatibility',{detail:{warnings,browserInfo: this.browserInfo,features: this.features}}));}showWarningModal(warnings){const modal = document.createElement('div');modal.className = 'modal fade';modal.id = 'compatibilityModal';modal.innerHTML = ` <div class="modal-dialog"> <div class="modal-content"> <div class="modal-header bg-warning"> <h5 class="modal-title">Browser Compatibility Warning</h5> </div> <div class="modal-body"> <p>Your browser may not support all features of this application:</p> <ul> ${warnings.map(w => `<li>${w.message}</li>`).join('')}</ul> <p>For the best experience,please use a modern browser like Chrome,Firefox,Safari,or Edge.</p> </div> <div class="modal-footer"> <button type="button" class="btn btn-warning" data-bs-dismiss="modal">Continue Anyway</button> <a href="https://browsehappy.com/" class="btn btn-primary" target="_blank">Update Browser</a> </div> </div> </div> `;document.body.appendChild(modal);if(window.bootstrap){const bsModal = new bootstrap.Modal(modal);bsModal.show();}else{alert(warnings.map(w => w.message).join('\n\n'));modal.remove();}}applyPolyfills(){if(!this.features.fetch){this.loadFetchPolyfill();}if(!this.features.promises){this.loadPromisePolyfill();}if(!this.features.customElements){this.loadCustomElementsPolyfill();}if(!this.features.intersectionObserver){this.loadIntersectionObserverPolyfill();}}loadFetchPolyfill(){console.log('Loading fetch polyfill...');window.fetch = function(url,options ={}){return new Promise((resolve,reject)=>{const xhr = new XMLHttpRequest();const method = options.method || 'GET';xhr.open(method,url);if(options.headers){Object.entries(options.headers).forEach(([key,value])=>{xhr.setRequestHeader(key,value);});}xhr.onload =()=>{const response ={ok: xhr.status >= 200 && xhr.status < 300,status: xhr.status,statusText: xhr.statusText,json:()=> Promise.resolve(JSON.parse(xhr.responseText)),text:()=> Promise.resolve(xhr.responseText)};resolve(response);};xhr.onerror =()=> reject(new Error('Network error'));xhr.ontimeout =()=> reject(new Error('Request timeout'));if(options.timeout){xhr.timeout = options.timeout;}xhr.send(options.body);});};}loadPromisePolyfill(){console.log('Loading Promise polyfill...');console.error('Promise polyfill needed but not implemented');}loadCustomElementsPolyfill(){console.log('Custom Elements not supported,some features may not work');}loadIntersectionObserverPolyfill(){console.log('IntersectionObserver not supported,lazy loading may not work optimally');}setupFallbacks(){if(!this.webSocketSupport.supported){this.setupWebSocketFallback();}if(!this.features.localStorage){this.setupLocalStorageFallback();}if(!this.features.notifications){this.setupNotificationFallback();}}setupWebSocketFallback(){console.log('Setting up WebSocket fallback using polling');window.WebSocketFallback = class{constructor(url){this.url = url;this.readyState = 0;this.onopen = null;this.onmessage = null;this.onerror = null;this.onclose = null;this.startPolling();}startPolling(){console.log('WebSocket fallback: polling not implemented');setTimeout(()=>{this.readyState = 3;if(this.onerror){this.onerror(new Error('WebSocket not supported'));}},100);}send(data){console.log('WebSocket fallback: send not implemented');}close(){this.readyState = 3;if(this.onclose){this.onclose();}}};}setupLocalStorageFallback(){console.log('Setting up localStorage fallback using cookies');window.localStorage ={getItem:(key)=>{const cookies = document.cookie.split(';');for(let cookie of cookies){const [name,value] = cookie.trim().split('=');if(name === key){return decodeURIComponent(value);}}return null;},setItem:(key,value)=>{document.cookie = `${key}=${encodeURIComponent(value)};path=/;max-age=31536000`;},removeItem:(key)=>{document.cookie = `${key}=;path=/;expires=Thu,01 Jan 1970 00:00:00 GMT`;},clear:()=>{const cookies = document.cookie.split(';');for(let cookie of cookies){const name = cookie.split('=')[0].trim();document.cookie = `${name}=;path=/;expires=Thu,01 Jan 1970 00:00:00 GMT`;}}};}setupNotificationFallback(){console.log('Setting up notification fallback using alerts');window.Notification = class{constructor(title,options ={}){if(options.requireInteraction){alert(`${title}: ${options.body || ''}`);}else{console.log(`Notification: ${title}`,options.body);}}static requestPermission(){return Promise.resolve('denied');}close(){}};window.Notification.permission = 'denied';}isSupported(feature){return this.features[feature] || false;}getBrowserInfo(){return{...this.browserInfo};}getFeatures(){return{...this.features};}getWebSocketSupport(){return{...this.webSocketSupport};}isModernBrowser(){return this.browserInfo.isSupported && this.features.es6Classes && this.features.promises && this.features.fetch;}getRecommendations(){const recommendations = [];if(!this.browserInfo.isSupported){recommendations.push({type: 'browser',action: 'Update your browser to the latest version',priority: 'high'});}if(!this.features.webSocket){recommendations.push({type: 'feature',action: 'Real-time features will be limited without WebSocket support',priority: 'medium'});}if(!this.features.localStorage){recommendations.push({type: 'feature',action: 'Some settings may not persist without localStorage support',priority: 'medium'});}return recommendations;}}window.browserCompatibility = new BrowserCompatibility();if(typeof module !== 'undefined' && module.exports){module.exports = BrowserCompatibility;}class ModuleLoader{constructor(){this.loadedModules = new Set();this.loadingModules = new Map();this.dependencies = new Map();this.moduleCache = new Map();this.baseUrl = '/static/js/';this.browserSupport = this.checkBrowserSupport();this.loadTimes = new Map();this.init();}init(){this.defineDependencies();this.preloadCriticalModules();this.setupPerformanceMonitoring();}defineDependencies(){this.dependencies.set('auth-manager',['error-handler','loading-manager']);this.dependencies.set('navigation-controller',['auth-manager','ui-state-manager']);this.dependencies.set('websocket-client',['auth-manager','error-handler']);this.dependencies.set('enhanced-language-switcher',['language-switcher','language-persistence-manager']);this.dependencies.set('app',['ui-state-manager','auth-manager','navigation-controller']);this.dependencies.set('websocket-status-dashboard',['websocket-client']);this.dependencies.set('api-tester',['auth-manager']);this.dependencies.set('calendar-integration',['auth-manager']);this.dependencies.set('crm-features',['auth-manager']);this.dependencies.set('inbox-features',['auth-manager']);}preloadCriticalModules(){const criticalModules = [ 'error-handler','loading-manager','ui-state-manager' ];criticalModules.forEach(module =>{this.loadModule(module,{priority: 'high'});});}async loadModule(moduleName,options ={}){const{priority = 'normal',timeout = 10000}= options;if(this.loadedModules.has(moduleName)){return this.moduleCache.get(moduleName);}if(this.loadingModules.has(moduleName)){return this.loadingModules.get(moduleName);}const loadPromise = this.doLoadModule(moduleName,{priority,timeout});this.loadingModules.set(moduleName,loadPromise);try{const result = await loadPromise;this.loadingModules.delete(moduleName);return result;}catch(error){this.loadingModules.delete(moduleName);throw error;}}async doLoadModule(moduleName,options){const startTime = performance.now();try{await this.loadDependencies(moduleName);const moduleUrl = `${this.baseUrl}${moduleName}.js`;await this.loadScript(moduleUrl,options);this.loadedModules.add(moduleName);const loadTime = performance.now()- startTime;this.loadTimes.set(moduleName,loadTime);console.log(`Module '${moduleName}' loaded in ${loadTime.toFixed(2)}ms`);const moduleExport = window[this.getModuleGlobalName(moduleName)];if(moduleExport){this.moduleCache.set(moduleName,moduleExport);}this.emitModuleEvent('module:loaded',{moduleName,loadTime});return moduleExport;}catch(error){console.error(`Failed to load module '${moduleName}':`,error);this.emitModuleEvent('module:error',{moduleName,error: error.message});throw error;}}async loadDependencies(moduleName){const deps = this.dependencies.get(moduleName)|| [];if(deps.length === 0){return;}const depPromises = deps.map(dep => this.loadModule(dep));await Promise.all(depPromises);}loadScript(url,options ={}){return new Promise((resolve,reject)=>{const{priority = 'normal',timeout = 10000}= options;const existingScript = document.querySelector(`script[src="${url}"]`);if(existingScript){if(existingScript.dataset.loaded === 'true'){resolve();return;}else{existingScript.addEventListener('load',resolve);existingScript.addEventListener('error',reject);return;}}const script = document.createElement('script');script.src = url;script.async = true;script.dataset.loaded = 'false';if('importance' in script){script.importance = priority === 'high' ? 'high' : 'auto';}const timeoutId = setTimeout(()=>{script.remove();reject(new Error(`Script loading timeout: ${url}`));},timeout);script.onload =()=>{clearTimeout(timeoutId);script.dataset.loaded = 'true';resolve();};script.onerror =()=>{clearTimeout(timeoutId);script.remove();reject(new Error(`Failed to load script: ${url}`));};if(priority === 'high'){document.head.insertBefore(script,document.head.firstChild);}else{document.head.appendChild(script);}});}getModuleGlobalName(moduleName){const nameMap ={'auth-manager': 'AuthenticationManager','ui-state-manager': 'UIStateManager','navigation-controller': 'NavigationController','dropdown-manager': 'DropdownManager','websocket-client': 'WebSocketClient','language-switcher': 'LanguageSwitcher','enhanced-language-switcher': 'EnhancedLanguageSwitcher','language-persistence-manager': 'LanguagePersistenceManager','error-handler': 'ErrorHandler','loading-manager': 'LoadingManager'};return nameMap[moduleName] || moduleName;}async loadPageFeatures(pageName){const pageModules ={'inbox': ['inbox-features'],'crm': ['crm-features'],'calendar': ['calendar-features','calendar-integration'],'api-tester': ['api-tester'],'dashboard': ['websocket-status-dashboard']};const modules = pageModules[pageName] || [];if(modules.length > 0){console.log(`Loading features for page: ${pageName}`);try{await Promise.all(modules.map(module => this.loadModule(module)));console.log(`Page features loaded for: ${pageName}`);}catch(error){console.error(`Failed to load features for page ${pageName}:`,error);}}}checkBrowserSupport(){const support ={webSocket: 'WebSocket' in window,localStorage: 'localStorage' in window,fetch: 'fetch' in window,promises: 'Promise' in window,es6Classes:(()=>{try{eval('class Test{}');return true;}catch(e){return false;}})(),modules: 'noModule' in document.createElement('script'),intersectionObserver: 'IntersectionObserver' in window,performanceObserver: 'PerformanceObserver' in window};const unsupported = Object.entries(support).filter(([feature,supported])=> !supported).map(([feature])=> feature);if(unsupported.length > 0){console.warn('Unsupported browser features:',unsupported);}return support;}checkWebSocketSupport(){if(!this.browserSupport.webSocket){console.warn('WebSocket not supported in this browser');return false;}try{const testSocket = new WebSocket('ws://test');testSocket.close();return true;}catch(error){console.warn('WebSocket creation failed:',error);return false;}}setupPerformanceMonitoring(){if(!this.browserSupport.performanceObserver){return;}try{const observer = new PerformanceObserver((list)=>{const entries = list.getEntries();entries.forEach(entry =>{if(entry.entryType === 'resource' && entry.name.includes('/static/js/')){const moduleName = entry.name.split('/').pop().replace('.js','');console.log(`Resource timing for ${moduleName}:`,{duration: entry.duration,transferSize: entry.transferSize,encodedBodySize: entry.encodedBodySize});}});});observer.observe({entryTypes: ['resource']});}catch(error){console.warn('Performance monitoring setup failed:',error);}}emitModuleEvent(eventName,data){const event = new CustomEvent(eventName,{detail: data});document.dispatchEvent(event);}isModuleLoaded(moduleName){return this.loadedModules.has(moduleName);}getLoadedModules(){return Array.from(this.loadedModules);}getLoadTimes(){return Object.fromEntries(this.loadTimes);}getBrowserSupport(){return{...this.browserSupport};}preloadModules(moduleNames){moduleNames.forEach(moduleName =>{this.loadModule(moduleName,{priority: 'low'}).catch(error =>{console.warn(`Preload failed for ${moduleName}:`,error);});});}cleanup(){this.loadedModules.clear();this.loadingModules.clear();this.moduleCache.clear();this.loadTimes.clear();}}window.moduleLoader = new ModuleLoader();if(typeof module !== 'undefined' && module.exports){module.exports = ModuleLoader;}class ErrorHandler{constructor(){this.errorQueue = [];this.maxErrorQueue = 50;this.isOnline = navigator.onLine;this.errorCounts = new Map();this.maxSameErrorCount = 5;this.notificationContainer = null;this.init();}init(){console.log('Initializing Error Handler...');this.setupGlobalErrorHandlers();this.setupNetworkMonitoring();this.createNotificationContainer();this.setupErrorReporting();console.log('Error Handler initialized');}setupGlobalErrorHandlers(){window.addEventListener('error',(event)=>{this.handleJavaScriptError({message: event.message,filename: event.filename,lineno: event.lineno,colno: event.colno,error: event.error,type: 'javascript'});});window.addEventListener('unhandledrejection',(event)=>{this.handlePromiseRejection({reason: event.reason,promise: event.promise,type: 'promise'});});window.addEventListener('error',(event)=>{if(event.target !== window){this.handleResourceError({element: event.target,source: event.target.src || event.target.href,type: 'resource'});}},true);}setupNetworkMonitoring(){window.addEventListener('online',()=>{this.isOnline = true;this.showNotification('success','Connection restored','You are back online');this.hideOfflineIndicator();this.retryFailedRequests();});window.addEventListener('offline',()=>{this.isOnline = false;this.showNotification('warning','Connection lost','You are currently offline. Some features may not work.');this.showOfflineIndicator();});this.interceptFetchRequests();this.setupGracefulDegradation();}interceptFetchRequests(){const originalFetch = window.fetch;window.fetch = async(...args)=>{try{const response = await originalFetch.apply(this,args);if(!response.ok){this.handleAPIError({url: args[0],status: response.status,statusText: response.statusText,response: response.clone()});}return response;}catch(error){this.handleNetworkError({url: args[0],error: error,isOnline: this.isOnline});if(!this.isOnline && error.name === 'TypeError'){this.addFailedRequest(args[0],args[1]);}throw error;}};}handleJavaScriptError(errorInfo){const errorKey = `${errorInfo.filename}:${errorInfo.lineno}:${errorInfo.message}`;if(this.shouldIgnoreError(errorKey)){return;}console.error('JavaScript Error:',errorInfo);this.addToErrorQueue({...errorInfo,timestamp: new Date().toISOString(),userAgent: navigator.userAgent,url: window.location.href});const userMessage = this.getUserFriendlyMessage(errorInfo);this.showNotification('error','Application Error',userMessage);if(this.isCriticalError(errorInfo)){this.reportError(errorInfo);}}handlePromiseRejection(rejectionInfo){const errorKey = `promise:${rejectionInfo.reason}`;if(this.shouldIgnoreError(errorKey)){return;}console.error('Unhandled Promise Rejection:',rejectionInfo);this.addToErrorQueue({...rejectionInfo,timestamp: new Date().toISOString(),userAgent: navigator.userAgent,url: window.location.href});let userMessage = 'An operation failed to complete';if(rejectionInfo.reason && typeof rejectionInfo.reason === 'string'){if(rejectionInfo.reason.includes('fetch')){userMessage = 'Failed to load data. Please check your connection.';}else if(rejectionInfo.reason.includes('auth')){userMessage = 'Authentication failed. Please log in again.';}}this.showNotification('error','Operation Failed',userMessage);}handleResourceError(errorInfo){console.error('Resource Loading Error:',errorInfo);const resourceType = this.getResourceType(errorInfo.element);let userMessage = `Failed to load ${resourceType}`;if(!this.isOnline){userMessage += '(you are offline)';}this.addToErrorQueue({...errorInfo,resourceType,timestamp: new Date().toISOString(),url: window.location.href});if(this.isCriticalResource(errorInfo.element)){this.showNotification('warning','Loading Error',userMessage);}}async handleAPIError(errorInfo){let errorData = null;try{errorData = await errorInfo.response.json();}catch(e){}console.error('API Error:',{url: errorInfo.url,status: errorInfo.status,statusText: errorInfo.statusText,data: errorData});this.addToErrorQueue({...errorInfo,data: errorData,timestamp: new Date().toISOString(),url: window.location.href});const userMessage = this.getAPIErrorMessage(errorInfo.status,errorData);const severity = this.getAPIErrorSeverity(errorInfo.status);this.showNotification(severity,'Request Failed',userMessage);if(errorInfo.status === 401){this.handleAuthenticationError();}else if(errorInfo.status >= 500){this.handleServerError(errorInfo);}}handleNetworkError(errorInfo){console.error('Network Error:',errorInfo);this.addToErrorQueue({...errorInfo,timestamp: new Date().toISOString(),url: window.location.href});let userMessage = 'Network request failed';if(!errorInfo.isOnline){userMessage = 'You are offline. Please check your internet connection.';}else if(errorInfo.error.name === 'TypeError'){userMessage = 'Unable to connect to server. Please try again.';}else if(errorInfo.error.name === 'AbortError'){userMessage = 'Request was cancelled or timed out.';}this.showNotification('error','Connection Error',userMessage);}getUserFriendlyMessage(errorInfo){if(errorInfo.message.includes('is not defined')){return 'A required component failed to load. Please refresh the page.';}else if(errorInfo.message.includes('Cannot read property')){return 'An unexpected error occurred. Please try again.';}else if(errorInfo.message.includes('fetch')){return 'Failed to load data. Please check your connection.';}else if(errorInfo.message.includes('Permission denied')){return 'Permission denied. Please check your access rights.';}else if(errorInfo.message.includes('Network Error')){return 'Network connection failed. Please check your internet connection.';}return 'An unexpected error occurred. Please refresh the page if the problem persists.';}getAPIErrorMessage(status,errorData){const messages ={400: 'Invalid request. Please check your input.',401: 'Authentication required. Please log in.',403: 'Access denied. You don\'t have permission for this action.',404: 'The requested resource was not found.',409: 'Conflict occurred. The resource may have been modified.',422: 'Validation failed. Please check your input.',429: 'Too many requests. Please wait a moment and try again.',500: 'Server error occurred. Please try again later.',502: 'Service temporarily unavailable. Please try again.',503: 'Service maintenance in progress. Please try again later.',504: 'Request timed out. Please try again.'};if(errorData && errorData.error && errorData.error.message){return errorData.error.message;}return messages[status] || `Request failed with status ${status}`;}getAPIErrorSeverity(status){if(status >= 500)return 'error';if(status === 401 || status === 403)return 'warning';if(status === 429)return 'info';return 'warning';}handleAuthenticationError(){localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');if(window.aiSecretaryApp && window.aiSecretaryApp.authManager){window.aiSecretaryApp.authManager.showUnauthenticatedUI();}setTimeout(()=>{const returnUrl = encodeURIComponent(window.location.href);window.location.href = `/login?return_url=${returnUrl}`;},2000);}handleServerError(errorInfo){this.reportError({type: 'server_error',status: errorInfo.status,url: errorInfo.url,timestamp: new Date().toISOString()});}shouldIgnoreError(errorKey){const count = this.errorCounts.get(errorKey)|| 0;this.errorCounts.set(errorKey,count + 1);return count >= this.maxSameErrorCount;}isCriticalError(errorInfo){const criticalPatterns = [ 'ReferenceError','TypeError: Cannot read property','SecurityError','Authentication','Authorization' ];return criticalPatterns.some(pattern => errorInfo.message.includes(pattern));}getResourceType(element){const tagName = element.tagName.toLowerCase();switch(tagName){case 'script': return 'JavaScript file';case 'link': return 'stylesheet';case 'img': return 'image';case 'video': return 'video';case 'audio': return 'audio';default: return 'resource';}}isCriticalResource(element){const tagName = element.tagName.toLowerCase();if(tagName === 'script'){const src = element.src;return src.includes('app.js')|| src.includes('auth-manager.js')|| src.includes('bootstrap')|| src.includes('socket.io');}if(tagName === 'link' && element.rel === 'stylesheet'){return element.href.includes('bootstrap')|| element.href.includes('app.css');}return false;}addToErrorQueue(error){this.errorQueue.push(error);if(this.errorQueue.length > this.maxErrorQueue){this.errorQueue.shift();}}createNotificationContainer(){if(document.getElementById('error-notifications')){return;}const container = document.createElement('div');container.id = 'error-notifications';container.className = 'error-notifications';container.style.cssText = ` position: fixed;top: 20px;right: 20px;z-index: 9999;max-width: 400px;`;document.body.appendChild(container);this.notificationContainer = container;}showNotification(type,title,message,duration = 5000){if(!this.notificationContainer){this.createNotificationContainer();}const notification = document.createElement('div');notification.className = `alert alert-${type}alert-dismissible fade show error-notification`;notification.style.cssText = ` margin-bottom: 10px;box-shadow: 0 4px 6px rgba(0,0,0,0.1);`;notification.innerHTML = ` <strong>${title}</strong> <div>${message}</div> <button type="button" class="btn-close" data-bs-dismiss="alert"></button> `;this.notificationContainer.appendChild(notification);if(duration > 0){setTimeout(()=>{if(notification.parentNode){notification.remove();}},duration);}const notifications = this.notificationContainer.querySelectorAll('.error-notification');if(notifications.length > 5){notifications[0].remove();}}retryFailedRequests(){console.log('Connection restored - you may retry failed operations');}async reportError(errorInfo){try{const token = localStorage.getItem('access_token');if(!token)return;await fetch('/api/v1/errors/report',{method: 'POST',headers:{'Content-Type': 'application/json','Authorization': `Bearer ${token}`},body: JSON.stringify({error: errorInfo,timestamp: new Date().toISOString(),user_agent: navigator.userAgent,url: window.location.href})});}catch(e){console.debug('Error reporting failed:',e);}}setupErrorReporting(){setInterval(()=>{if(this.errorQueue.length > 0){this.reportBatchErrors();}},5 * 60 * 1000);}async reportBatchErrors(){if(this.errorQueue.length === 0)return;try{const token = localStorage.getItem('access_token');if(!token)return;const errors = [...this.errorQueue];this.errorQueue = [];await fetch('/api/v1/errors/batch',{method: 'POST',headers:{'Content-Type': 'application/json','Authorization': `Bearer ${token}`},body: JSON.stringify({errors: errors,session_id: this.getSessionId(),timestamp: new Date().toISOString()})});}catch(e){console.debug('Batch error reporting failed:',e);}}getSessionId(){let sessionId = sessionStorage.getItem('error_session_id');if(!sessionId){sessionId = 'session_' + Date.now()+ '_' + Math.random().toString(36).substr(2,9);sessionStorage.setItem('error_session_id',sessionId);}return sessionId;}getErrorStats(){return{totalErrors: this.errorQueue.length,errorCounts: Object.fromEntries(this.errorCounts),isOnline: this.isOnline,sessionId: this.getSessionId()};}clearErrors(){this.errorQueue = [];this.errorCounts.clear();}setNotificationsEnabled(enabled){this.notificationsEnabled = enabled;if(!enabled && this.notificationContainer){this.notificationContainer.style.display = 'none';}else if(enabled && this.notificationContainer){this.notificationContainer.style.display = 'block';}}setupGracefulDegradation(){this.setupOfflineMode();this.setupRetryMechanisms();this.setupFallbackStates();}setupOfflineMode(){const handleOfflineMode =()=>{if(window.wsClient){window.wsClient.disconnect();}this.markOfflineElements();this.cachePageState();};const handleOnlineMode =()=>{if(window.wsClient){window.wsClient.reconnectManually();}this.unmarkOfflineElements();this.restorePageState();};if(!this.isOnline){handleOfflineMode();}window.addEventListener('offline',handleOfflineMode);window.addEventListener('online',handleOnlineMode);}setupRetryMechanisms(){this.failedRequests = [];this.maxRetries = 3;this.retryDelay = 1000;}setupFallbackStates(){this.checkDependencies();this.checkStylesheets();}checkDependencies(){const requiredDependencies = [{name: 'Bootstrap',check:()=> typeof bootstrap !== 'undefined'},{name: 'Socket.IO',check:()=> typeof io !== 'undefined'}];requiredDependencies.forEach(dep =>{if(!dep.check()){console.warn(`${dep.name}not loaded - some features may not work`);this.showNotification('warning','Feature Unavailable',`${dep.name}failed to load. Some features may not work properly.`);}});}checkStylesheets(){const stylesheets = document.querySelectorAll('link[rel="stylesheet"]');stylesheets.forEach(link =>{link.addEventListener('error',()=>{console.warn('Stylesheet failed to load:',link.href);this.showNotification('warning','Styling Issue','Some styles failed to load. The page may not look correct.');});});}showOfflineIndicator(){let indicator = document.getElementById('offline-indicator');if(!indicator){indicator = document.createElement('div');indicator.id = 'offline-indicator';indicator.className = 'offline-indicator';indicator.textContent = 'You are offline - some features may not work';document.body.insertBefore(indicator,document.body.firstChild);}indicator.style.display = 'block';}hideOfflineIndicator(){const indicator = document.getElementById('offline-indicator');if(indicator){indicator.style.display = 'none';}}markOfflineElements(){const networkButtons = document.querySelectorAll('[data-requires-network]');networkButtons.forEach(button =>{button.disabled = true;button.title = 'This feature requires an internet connection';button.classList.add('offline-disabled');});const forms = document.querySelectorAll('form[data-requires-network]');forms.forEach(form =>{let offlineMsg = form.querySelector('.offline-message');if(!offlineMsg){offlineMsg = document.createElement('div');offlineMsg.className = 'alert alert-warning offline-message';offlineMsg.textContent = 'This form requires an internet connection to submit.';form.insertBefore(offlineMsg,form.firstChild);}});}unmarkOfflineElements(){const networkButtons = document.querySelectorAll('.offline-disabled');networkButtons.forEach(button =>{button.disabled = false;button.title = '';button.classList.remove('offline-disabled');});const offlineMessages = document.querySelectorAll('.offline-message');offlineMessages.forEach(msg => msg.remove());}cachePageState(){try{const state ={url: window.location.href,timestamp: Date.now(),formData: this.getFormData(),scrollPosition: window.scrollY};sessionStorage.setItem('offline_page_state',JSON.stringify(state));}catch(e){console.debug('Failed to cache page state:',e);}}restorePageState(){try{const cached = sessionStorage.getItem('offline_page_state');if(cached){const state = JSON.parse(cached);if(Date.now()- state.timestamp < 5 * 60 * 1000){this.restoreFormData(state.formData);window.scrollTo(0,state.scrollPosition);}sessionStorage.removeItem('offline_page_state');}}catch(e){console.debug('Failed to restore page state:',e);}}getFormData(){const forms = document.querySelectorAll('form');const formData ={};forms.forEach((form,index)=>{const data = new FormData(form);const formObj ={};for(let [key,value] of data.entries()){formObj[key] = value;}if(Object.keys(formObj).length > 0){formData[`form_${index}`] = formObj;}});return formData;}restoreFormData(formData){if(!formData)return;const forms = document.querySelectorAll('form');forms.forEach((form,index)=>{const cached = formData[`form_${index}`];if(cached){Object.entries(cached).forEach(([name,value])=>{const input = form.querySelector(`[name="${name}"]`);if(input && input.type !== 'password'){input.value = value;}});}});}retryFailedRequests(){if(this.failedRequests.length === 0)return;console.log(`Retrying ${this.failedRequests.length}failed requests...`);const requests = [...this.failedRequests];this.failedRequests = [];requests.forEach(async(request,index)=>{try{await new Promise(resolve => setTimeout(resolve,index * 100));const response = await fetch(request.url,request.options);if(response.ok){console.log('Successfully retried request:',request.url);}else{if(request.retryCount < this.maxRetries){request.retryCount =(request.retryCount || 0)+ 1;this.failedRequests.push(request);}}}catch(error){if(request.retryCount < this.maxRetries){request.retryCount =(request.retryCount || 0)+ 1;this.failedRequests.push(request);}}});}addFailedRequest(url,options ={}){this.failedRequests.push({url,options,timestamp: Date.now(),retryCount: 0});}}document.addEventListener('DOMContentLoaded',()=>{window.errorHandler = new ErrorHandler();});if(typeof module !== 'undefined' && module.exports){module.exports = ErrorHandler;}class LoadingManager{constructor(){this.activeOperations = new Set();this.loadingIndicators = new Map();this.feedbackQueue = [];this.init();}init(){this.createGlobalLoadingOverlay();this.createToastContainer();this.setupEventListeners();console.log('Loading Manager initialized');}createGlobalLoadingOverlay(){const overlay = document.createElement('div');overlay.id = 'global-loading-overlay';overlay.className = 'loading-overlay d-none';overlay.innerHTML = ` <div class="loading-content"> <div class="spinner-border text-primary" role="status"> <span class="visually-hidden">Loading...</span> </div> <div class="loading-message mt-3">Loading...</div> </div> `;document.body.appendChild(overlay);}createToastContainer(){if(!document.getElementById('toast-container')){const container = document.createElement('div');container.id = 'toast-container';container.className = 'toast-container position-fixed top-0 end-0 p-3';container.style.zIndex = '1055';document.body.appendChild(container);}}setupEventListeners(){document.addEventListener('auth:login_start',()=>{this.showAuthenticationLoading('Signing in...');});document.addEventListener('auth:login_success',()=>{this.hideAuthenticationLoading();this.showSuccessToast('Successfully signed in!');});document.addEventListener('auth:login_error',(event)=>{this.hideAuthenticationLoading();this.showErrorToast(event.detail.message || 'Login failed');});document.addEventListener('auth:logout_start',()=>{this.showAuthenticationLoading('Signing out...');});document.addEventListener('auth:logout_complete',()=>{this.hideAuthenticationLoading();this.showInfoToast('Signed out successfully');});document.addEventListener('language:switch_start',(event)=>{this.showLanguageLoading(event.detail.language);});document.addEventListener('language:switch_success',(event)=>{this.hideLanguageLoading();this.showSuccessToast(`Language changed to ${event.detail.languageName}`);});document.addEventListener('language:switch_error',(event)=>{this.hideLanguageLoading();this.showErrorToast(event.detail.message || 'Failed to change language');});document.addEventListener('websocket:connecting',()=>{this.showConnectionStatus('connecting','Connecting to real-time services...');});document.addEventListener('websocket:connected',()=>{this.showConnectionStatus('connected','Real-time features enabled');this.showSuccessToast('Connected to real-time services',{duration: 3000});});document.addEventListener('websocket:disconnected',(event)=>{this.showConnectionStatus('disconnected','Connection lost - attempting to reconnect');this.showWarningToast('Real-time connection lost',{duration: 5000});});document.addEventListener('websocket:reconnecting',(event)=>{const attempt = event.detail.attempt || 1;this.showConnectionStatus('reconnecting',`Reconnecting...(attempt ${attempt})`);});document.addEventListener('websocket:max_reconnect_attempts',()=>{this.showConnectionStatus('failed','Connection failed - please refresh the page');this.showErrorToast('Unable to connect to real-time services',{duration: 0,action:{text: 'Retry',callback:()=>{if(window.wsClient){window.wsClient.reconnectManually();}}}});});document.addEventListener('api:request_start',(event)=>{this.showAPILoading(event.detail.operation);});document.addEventListener('api:request_complete',(event)=>{this.hideAPILoading(event.detail.operation);});document.addEventListener('api:request_error',(event)=>{this.hideAPILoading(event.detail.operation);this.showErrorToast(event.detail.message || 'Request failed');});}showAuthenticationLoading(message = 'Authenticating...'){this.startOperation('authentication',message);const authButtons = document.querySelectorAll('[data-action="login"],[data-action="logout"]');authButtons.forEach(button =>{this.showButtonLoading(button,message);});const loginForm = document.getElementById('loginForm');if(loginForm){this.showFormLoading(loginForm,message);}}hideAuthenticationLoading(){this.endOperation('authentication');const authButtons = document.querySelectorAll('[data-action="login"],[data-action="logout"]');authButtons.forEach(button =>{this.hideButtonLoading(button);});const loginForm = document.getElementById('loginForm');if(loginForm){this.hideFormLoading(loginForm);}}showLanguageLoading(language){const languageName = this.getLanguageName(language);const message = `Switching to ${languageName}...`;this.startOperation('language',message);const languageSwitcher = document.getElementById('language-switcher');if(languageSwitcher){this.showElementLoading(languageSwitcher,message);}const languageDropdown = document.getElementById('languageDropdown');if(languageDropdown){this.showButtonLoading(languageDropdown,message);}}hideLanguageLoading(){this.endOperation('language');const languageSwitcher = document.getElementById('language-switcher');if(languageSwitcher){this.hideElementLoading(languageSwitcher);}const languageDropdown = document.getElementById('languageDropdown');if(languageDropdown){this.hideButtonLoading(languageDropdown);}}getLanguageName(code){const languages ={'en': 'English','de': 'Deutsch','uk': 'Українська'};return languages[code] || code;}showConnectionStatus(status,message){let statusElement = document.getElementById('ws-connection-status');if(!statusElement){statusElement = document.createElement('div');statusElement.id = 'ws-connection-status';statusElement.className = 'connection-status';document.body.appendChild(statusElement);}statusElement.className = `connection-status ${status}`;statusElement.innerHTML = ` <div class="connection-status-content"> <div class="connection-status-icon"></div> <div class="connection-status-message">${message}</div> ${status === 'failed' ? '<button class="btn btn-sm btn-outline-primary ms-2" onclick="window.wsClient?.reconnectManually()">Retry</button>' : ''}</div> `;statusElement.style.display = 'block';if(status === 'connected'){setTimeout(()=>{if(statusElement.classList.contains('connected')){statusElement.style.display = 'none';}},3000);}}showAPILoading(operation){this.startOperation(`api_${operation}`,`Processing ${operation}...`);}hideAPILoading(operation){this.endOperation(`api_${operation}`);}startOperation(operationId,message = 'Loading...'){this.activeOperations.add(operationId);this.updateGlobalLoadingState(message);}endOperation(operationId){this.activeOperations.delete(operationId);this.updateGlobalLoadingState();}updateGlobalLoadingState(message = 'Loading...'){const overlay = document.getElementById('global-loading-overlay');if(!overlay)return;if(this.activeOperations.size > 0){const messageElement = overlay.querySelector('.loading-message');if(messageElement){messageElement.textContent = message;}overlay.classList.remove('d-none');}else{overlay.classList.add('d-none');}}showButtonLoading(button,message = 'Loading...'){if(!button)return;button.dataset.originalContent = button.innerHTML;button.dataset.originalDisabled = button.disabled;button.disabled = true;button.innerHTML = ` <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> ${message}`;button.classList.add('loading');}hideButtonLoading(button){if(!button || !button.classList.contains('loading'))return;button.innerHTML = button.dataset.originalContent || button.innerHTML;button.disabled = button.dataset.originalDisabled === 'true';button.classList.remove('loading');delete button.dataset.originalContent;delete button.dataset.originalDisabled;}showFormLoading(form,message = 'Processing...'){if(!form)return;const inputs = form.querySelectorAll('input,button,select,textarea');inputs.forEach(input =>{input.dataset.originalDisabled = input.disabled;input.disabled = true;});let loadingIndicator = form.querySelector('.form-loading-indicator');if(!loadingIndicator){loadingIndicator = document.createElement('div');loadingIndicator.className = 'form-loading-indicator text-center mt-3';form.appendChild(loadingIndicator);}loadingIndicator.innerHTML = ` <div class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></div> <span>${message}</span> `;loadingIndicator.style.display = 'block';form.classList.add('loading');}hideFormLoading(form){if(!form || !form.classList.contains('loading'))return;const inputs = form.querySelectorAll('input,button,select,textarea');inputs.forEach(input =>{input.disabled = input.dataset.originalDisabled === 'true';delete input.dataset.originalDisabled;});const loadingIndicator = form.querySelector('.form-loading-indicator');if(loadingIndicator){loadingIndicator.style.display = 'none';}form.classList.remove('loading');}showElementLoading(element,message = 'Loading...'){if(!element)return;element.dataset.originalContent = element.innerHTML;element.innerHTML = ` <div class="d-flex align-items-center justify-content-center"> <div class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></div> <span>${message}</span> </div> `;element.classList.add('loading');}hideElementLoading(element){if(!element || !element.classList.contains('loading'))return;element.innerHTML = element.dataset.originalContent || element.innerHTML;element.classList.remove('loading');delete element.dataset.originalContent;}showSuccessToast(message,options ={}){this.showToast(message,'success',options);}showErrorToast(message,options ={}){this.showToast(message,'danger',options);}showWarningToast(message,options ={}){this.showToast(message,'warning',options);}showInfoToast(message,options ={}){this.showToast(message,'info',options);}showToast(message,type = 'info',options ={}){const{duration = 5000,action = null,icon = null}= options;const toastId = `toast-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;const container = document.getElementById('toast-container');if(!container)return;const toast = document.createElement('div');toast.id = toastId;toast.className = `toast align-items-center text-bg-${type}border-0`;toast.setAttribute('role','alert');toast.setAttribute('aria-live','assertive');toast.setAttribute('aria-atomic','true');const iconHtml = icon ? `<i class="${icon}me-2"></i>` : this.getTypeIcon(type);const actionHtml = action ? ` <button type="button" class="btn btn-sm btn-outline-light ms-2" onclick="${action.callback.toString()}()"> ${action.text}</button> ` : '';toast.innerHTML = ` <div class="d-flex"> <div class="toast-body d-flex align-items-center"> ${iconHtml}${message}${actionHtml}</div> <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button> </div> `;container.appendChild(toast);const bsToast = new bootstrap.Toast(toast,{autohide: duration > 0,delay: duration});bsToast.show();toast.addEventListener('hidden.bs.toast',()=>{toast.remove();});return toastId;}getTypeIcon(type){const icons ={'success': '<i class="fas fa-check-circle me-2"></i>','danger': '<i class="fas fa-exclamation-circle me-2"></i>','warning': '<i class="fas fa-exclamation-triangle me-2"></i>','info': '<i class="fas fa-info-circle me-2"></i>'};return icons[type] || icons.info;}showPageLoading(message = 'Loading page...'){this.startOperation('page',message);}hidePageLoading(){this.endOperation('page');}showNavigationLoading(targetPage){const message = `Loading ${targetPage}...`;this.startOperation('navigation',message);const navElement = document.getElementById('main-nav');if(navElement){const loadingIndicator = document.createElement('li');loadingIndicator.className = 'nav-item nav-loading';loadingIndicator.innerHTML = ` <span class="nav-link"> <div class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></div> ${message}</span> `;navElement.appendChild(loadingIndicator);}}hideNavigationLoading(){this.endOperation('navigation');const loadingIndicator = document.querySelector('.nav-loading');if(loadingIndicator){loadingIndicator.remove();}}isOperationActive(operationId){return this.activeOperations.has(operationId);}getActiveOperations(){return Array.from(this.activeOperations);}clearAllOperations(){this.activeOperations.clear();this.updateGlobalLoadingState();}destroy(){this.clearAllOperations();const overlay = document.getElementById('global-loading-overlay');if(overlay)overlay.remove();const toastContainer = document.getElementById('toast-container');if(toastContainer)toastContainer.remove();const connectionStatus = document.getElementById('ws-connection-status');if(connectionStatus)connectionStatus.remove();}}window.LoadingManager = LoadingManager;document.addEventListener('DOMContentLoaded',()=>{if(!window.loadingManager){window.loadingManager = new LoadingManager();}});class UIStateManager{constructor(){this.state ={isAuthenticated: false,currentUser: null,currentLanguage: 'en',isWebSocketConnected: false,activeNavItem: null,notifications: [],isLoading: false};this.subscribers = [];this.isInitialized = false;}init(){if(this.isInitialized){return;}console.log('Initializing UI State Manager...');this.state.currentLanguage = document.documentElement.lang || 'en';this.updateActiveNavItem();this.setupEventListeners();this.isInitialized = true;console.log('UI State Manager initialized');}setupEventListeners(){window.addEventListener('popstate',()=>{this.updateActiveNavItem();});window.addEventListener('localechange',(event)=>{this.updateState({currentLanguage: event.detail.locale});});window.addEventListener('languagechange',(event)=>{this.updateState({currentLanguage: event.detail.language});});document.addEventListener('websocket:connected',()=>{this.updateState({isWebSocketConnected: true});});document.addEventListener('websocket:disconnected',()=>{this.updateState({isWebSocketConnected: false});});document.addEventListener('websocket:status_change',(event)=>{this.updateState({isWebSocketConnected: event.detail.status === 'connected'});});document.addEventListener('user:login',(event)=>{this.updateState({isAuthenticated: true,currentUser: event.detail.user});});document.addEventListener('user:logout',()=>{this.updateState({isAuthenticated: false,currentUser: null});});document.addEventListener('page:loaded',()=>{this.updateActiveNavItem();});document.addEventListener('notification:received',(event)=>{this.addNotification({type: 'info',title: event.detail.title || 'Notification',message: event.detail.message,source: 'websocket'});});document.addEventListener('notification:tenant',(event)=>{this.addNotification({type: 'warning',title: event.detail.title || 'System Notification',message: event.detail.message,source: 'system'});});document.addEventListener('alert:system',(event)=>{this.addNotification({type: 'danger',title: event.detail.title || 'System Alert',message: event.detail.message,urgent: event.detail.urgent,source: 'system'});});}updateState(newState){const oldState ={...this.state};this.state ={...this.state,...newState};this.notifySubscribers(this.state,oldState);}getState(){return{...this.state};}subscribe(callback){if(typeof callback === 'function'){this.subscribers.push(callback);}}unsubscribe(callback){const index = this.subscribers.indexOf(callback);if(index > -1){this.subscribers.splice(index,1);}}notifySubscribers(newState,oldState){this.subscribers.forEach(callback =>{try{callback(newState,oldState);}catch(error){console.error('UI state subscriber error:',error);}});}updateAuthState(isAuthenticated,user){this.updateState({isAuthenticated,currentUser: user});}updateActiveNavItem(){const currentPath = window.location.pathname;let activeItem = null;if(currentPath.includes('/dashboard')){activeItem = 'dashboard';}else if(currentPath.includes('/inbox')){activeItem = 'inbox';}else if(currentPath.includes('/crm')){activeItem = 'crm';}else if(currentPath.includes('/calendar')){activeItem = 'calendar';}else if(currentPath.includes('/settings')){activeItem = 'settings';}else if(currentPath.includes('/users')){activeItem = 'users';}if(activeItem !== this.state.activeNavItem){this.updateState({activeNavItem: activeItem});}}highlightActiveNavItem(activeItem){console.log('Active nav item:',activeItem);}addNotification(notification){const notifications = [...this.state.notifications,{id: Date.now(),timestamp: new Date(),...notification}];this.updateState({notifications});}removeNotification(id){const notifications = this.state.notifications.filter(n => n.id !== id);this.updateState({notifications});}clearNotifications(){this.updateState({notifications: []});}setLoading(isLoading){this.updateState({isLoading});}updateLanguage(language){this.updateState({currentLanguage: language});}updateWebSocketState(isConnected){this.updateState({isWebSocketConnected: isConnected});}get(property){return this.state[property];}isAuthenticated(){return this.state.isAuthenticated;}getCurrentUser(){return this.state.currentUser;}getCurrentLanguage(){return this.state.currentLanguage;}isWebSocketConnected(){return this.state.isWebSocketConnected;}getActiveNavItem(){return this.state.activeNavItem;}getNotifications(){return [...this.state.notifications];}isLoading(){return this.state.isLoading;}integrateWithAuthManager(authManager){if(!authManager)return;authManager.onAuthStateChange((isAuthenticated,user)=>{this.updateAuthState(isAuthenticated,user);});const authState = authManager.getAuthState();this.updateAuthState(authState.isAuthenticated,authState.user);}integrateWithNavigationController(navigationController){if(!navigationController)return;this.subscribe((newState,oldState)=>{if(newState.activeNavItem !== oldState.activeNavItem){console.log('Navigation state updated:',newState.activeNavItem);}});}integrateWithWebSocketClient(wsClient){if(!wsClient)return;wsClient.on('websocket:connected',()=>{this.updateWebSocketState(true);});wsClient.on('websocket:disconnected',()=>{this.updateWebSocketState(false);});wsClient.on('websocket:status_change',(event)=>{this.updateWebSocketState(event.detail.status === 'connected');});}integrateWithLanguageSwitcher(languageSwitcher){if(!languageSwitcher)return;this.subscribe((newState,oldState)=>{if(newState.currentLanguage !== oldState.currentLanguage){document.dispatchEvent(new CustomEvent('ui:language_changed',{detail:{language: newState.currentLanguage,previousLanguage: oldState.currentLanguage}}));}});}synchronizeState(){document.dispatchEvent(new CustomEvent('ui:state_sync',{detail:{state: this.getState()}}));this.updateUIElements();}updateUIElements(){if(this.state.isAuthenticated){document.body.classList.add('authenticated');document.body.classList.remove('unauthenticated');}else{document.body.classList.add('unauthenticated');document.body.classList.remove('authenticated');}if(this.state.isWebSocketConnected){document.body.classList.add('websocket-connected');document.body.classList.remove('websocket-disconnected');}else{document.body.classList.add('websocket-disconnected');document.body.classList.remove('websocket-connected');}if(this.state.currentLanguage){document.documentElement.lang = this.state.currentLanguage;}if(this.state.isLoading){document.body.classList.add('loading');}else{document.body.classList.remove('loading');}this.highlightActiveNavigation();}highlightActiveNavigation(){document.querySelectorAll('#main-nav .nav-link').forEach(link =>{link.classList.remove('active');});if(this.state.activeNavItem){const activeLink = document.querySelector(`#main-nav .nav-link[href*="${this.state.activeNavItem}"]`);if(activeLink){activeLink.classList.add('active');}}}getStateSnapshot(){return{timestamp: new Date().toISOString(),state:{...this.state},subscriberCount: this.subscribers.length,isInitialized: this.isInitialized};}validateState(){const issues = [];const requiredProps = ['isAuthenticated','currentLanguage','isWebSocketConnected'];requiredProps.forEach(prop =>{if(this.state[prop] === undefined){issues.push(`Missing required property: ${prop}`);}});if(typeof this.state.isAuthenticated !== 'boolean'){issues.push('isAuthenticated must be boolean');}if(typeof this.state.isWebSocketConnected !== 'boolean'){issues.push('isWebSocketConnected must be boolean');}if(typeof this.state.currentLanguage !== 'string'){issues.push('currentLanguage must be string');}if(!Array.isArray(this.state.notifications)){issues.push('notifications must be array');}return{isValid: issues.length === 0,issues: issues};}resetState(){this.state ={isAuthenticated: false,currentUser: null,currentLanguage: 'en',isWebSocketConnected: false,activeNavItem: null,notifications: [],isLoading: false};this.notifySubscribers(this.state,{});this.updateUIElements();}cleanup(){window.removeEventListener('popstate',this.updateActiveNavItem);this.subscribers = [];this.isInitialized = false;console.log('UI State Manager cleaned up');}}window.UIStateManager = UIStateManager;