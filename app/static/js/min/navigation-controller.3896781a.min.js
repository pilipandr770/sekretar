class NavigationController{constructor(authManager,uiStateManager){this.authManager = authManager;this.uiStateManager = uiStateManager;this.protectedRoutes = ['/dashboard','/inbox','/crm','/calendar','/settings','/users'];this.isInitialized = false;this.handleNavigationClick = this.handleNavigationClick.bind(this);this.updateActiveNavItem = this.updateActiveNavItem.bind(this);}init(){if(this.isInitialized){return;}console.log('Initializing Navigation Controller...');this.setupNavigationListeners();this.initializeNavigationState();if(this.authManager){this.authManager.onAuthStateChange((isAuthenticated,user)=>{this.onAuthStateChange(isAuthenticated,user);});}window.addEventListener('popstate',(event)=>{this.handleBrowserNavigation(event);});this.isInitialized = true;console.log('Navigation Controller initialized');}setupNavigationListeners(){const navLinks = document.querySelectorAll('#main-nav .nav-link');navLinks.forEach(link =>{if(!link.classList.contains('dropdown-toggle')){link.addEventListener('click',this.handleNavigationClick);}});const dropdownLinks = document.querySelectorAll('.dropdown-menu .dropdown-item');dropdownLinks.forEach(link =>{link.addEventListener('click',this.handleNavigationClick);});}async handleNavigationClick(event){const link = event.target.closest('a');if(!link || !link.href){return;}const href = link.getAttribute('href');if(href.startsWith('http')|| href.startsWith('#')){return;}const requiresAuth = this.protectedRoutes.some(route => href.includes(route));if(requiresAuth){const isAuthenticated = this.authManager ? this.authManager.isAuthenticated(): false;if(!isAuthenticated){event.preventDefault();this.showAuthRequiredMessage();setTimeout(()=>{const returnUrl = encodeURIComponent(window.location.origin + href);window.location.href = `/login?return_url=${returnUrl}`;},2000);return false;}}event.preventDefault();await this.navigateTo(href);}async navigateTo(href){try{this.showNavigationLoading(true);history.pushState(null,'',href);this.updateActiveNavItem();await this.loadPageContent(href);}catch(error){console.error('Navigation error:',error);this.showNavigationError('Failed to navigate. Please try again.');window.location.href = href;}finally{this.showNavigationLoading(false);}}async loadPageContent(href){if(this.supportsAjaxNavigation(href)){try{const response = await fetch(href,{headers:{'X-Requested-With': 'XMLHttpRequest','Accept': 'text/html'}});if(response.ok){const html = await response.text();this.updatePageContent(html);return;}}catch(error){console.warn('AJAX navigation failed,falling back to full page load:',error);}}window.location.href = href;}supportsAjaxNavigation(href){return false;}updatePageContent(html){const parser = new DOMParser();const newDoc = parser.parseFromString(html,'text/html');const newMain = newDoc.querySelector('main');const currentMain = document.querySelector('main');if(newMain && currentMain){currentMain.innerHTML = newMain.innerHTML;const newTitle = newDoc.querySelector('title');if(newTitle){document.title = newTitle.textContent;}this.reinitializePageComponents();}}reinitializePageComponents(){document.dispatchEvent(new CustomEvent('page:loaded',{detail:{url: window.location.href,timestamp: Date.now()}}));if(window.bootstrap){const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));tooltipTriggerList.map(function(tooltipTriggerEl){return new bootstrap.Tooltip(tooltipTriggerEl);});const popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));popoverTriggerList.map(function(popoverTriggerEl){return new bootstrap.Popover(popoverTriggerEl);});}}updateActiveNavItem(){const currentPath = window.location.pathname;document.querySelectorAll('#main-nav .nav-link').forEach(link =>{link.classList.remove('active');});let activeLink = null;if(currentPath.includes('/dashboard')){activeLink = document.querySelector('#main-nav .nav-link[href*="dashboard"]');}else if(currentPath.includes('/inbox')){activeLink = document.querySelector('#main-nav .nav-link[href*="inbox"]');}else if(currentPath.includes('/crm')){activeLink = document.querySelector('#main-nav .nav-link[href*="crm"]');}else if(currentPath.includes('/calendar')){activeLink = document.querySelector('#main-nav .nav-link[href*="calendar"]');}if(activeLink){activeLink.classList.add('active');}if(this.uiStateManager){this.uiStateManager.updateActiveNavItem();}}onAuthStateChange(isAuthenticated,user){if(isAuthenticated){this.enableNavigation();}else{this.handleUnauthenticatedNavigation();}}enableNavigation(){const navLinks = document.querySelectorAll('#main-nav .nav-link');navLinks.forEach(link =>{link.classList.remove('disabled');link.style.pointerEvents = 'auto';link.style.opacity = '1';link.removeAttribute('title');});}handleUnauthenticatedNavigation(){const navLinks = document.querySelectorAll('#main-nav .nav-link');navLinks.forEach(link =>{const href = link.getAttribute('href');const requiresAuth = this.protectedRoutes.some(route => href && href.includes(route));if(requiresAuth){link.style.opacity = '0.6';link.setAttribute('title','Login required to access this feature');link.classList.add('auth-required');}else{link.style.opacity = '1';link.removeAttribute('title');link.classList.remove('auth-required');}});}hasRoutePermission(href,user = null){const currentUser = user ||(this.authManager ? this.authManager.getCurrentUser(): null);const requiresAuth = this.protectedRoutes.some(route => href.includes(route));if(requiresAuth && !currentUser){return false;}if(href.includes('/users')&& currentUser){return currentUser.role === 'owner' || currentUser.role === 'manager';}return true;}redirectToAppropriateRoute(){const currentPath = window.location.pathname;const isAuthenticated = this.authManager ? this.authManager.isAuthenticated(): false;if(currentPath.includes('/login')&& isAuthenticated){const returnUrl = new URLSearchParams(window.location.search).get('return_url');window.location.href = returnUrl || '/dashboard';return;}if(this.isProtectedRoute(currentPath)&& !isAuthenticated){const returnUrl = encodeURIComponent(window.location.href);window.location.href = `/login?return_url=${returnUrl}`;return;}if(currentPath === '/'){window.location.href = isAuthenticated ? '/dashboard' : '/login';return;}}showAuthRequiredMessage(){this.showAlert('warning','Please log in to access this feature.');}showNavigationLoading(loading){if(loading){const navbar = document.querySelector('.navbar');if(navbar && !navbar.querySelector('.nav-loading')){const loadingDiv = document.createElement('div');loadingDiv.className = 'nav-loading';loadingDiv.innerHTML = '<div class="spinner-border spinner-border-sm text-light" role="status"></div>';loadingDiv.style.cssText = 'position: absolute;top: 50%;right: 20px;transform: translateY(-50%);';navbar.style.position = 'relative';navbar.appendChild(loadingDiv);}}else{const loadingDiv = document.querySelector('.nav-loading');if(loadingDiv){loadingDiv.remove();}}}showNavigationError(message){this.showAlert('danger',message);}showAlert(type,message){const alertDiv = document.createElement('div');alertDiv.className = `alert alert-${type}alert-dismissible fade show`;alertDiv.innerHTML = ` ${message}<button type="button" class="btn-close" data-bs-dismiss="alert"></button> `;const container = document.querySelector('.container')|| document.querySelector('main');if(container){container.insertBefore(alertDiv,container.firstChild);}setTimeout(()=>{if(alertDiv.parentNode){alertDiv.remove();}},5000);}isProtectedRoute(path = window.location.pathname){return this.protectedRoutes.some(route => path.includes(route));}getActiveNavItem(){const currentPath = window.location.pathname;if(currentPath.includes('/dashboard'))return 'dashboard';if(currentPath.includes('/inbox'))return 'inbox';if(currentPath.includes('/crm'))return 'crm';if(currentPath.includes('/calendar'))return 'calendar';if(currentPath.includes('/settings'))return 'settings';if(currentPath.includes('/users'))return 'users';return null;}handleBrowserNavigation(event){this.updateActiveNavItem();const currentPath = window.location.pathname;const isAuthenticated = this.authManager ? this.authManager.isAuthenticated(): false;if(this.isProtectedRoute(currentPath)&& !isAuthenticated){const returnUrl = encodeURIComponent(window.location.href);window.location.href = `/login?return_url=${returnUrl}`;}}initializeNavigationState(){this.updateActiveNavItem();this.redirectToAppropriateRoute();const isAuthenticated = this.authManager ? this.authManager.isAuthenticated(): false;if(isAuthenticated){this.enableNavigation();}else{this.handleUnauthenticatedNavigation();}}cleanup(){const navLinks = document.querySelectorAll('#main-nav .nav-link,.dropdown-menu .dropdown-item');navLinks.forEach(link =>{link.removeEventListener('click',this.handleNavigationClick);});window.removeEventListener('popstate',this.handleBrowserNavigation);}}window.NavigationController = NavigationController;