class DropdownManager{constructor(){this.dropdowns = new Map();this.isInitialized = false;this.activeDropdown = null;this.handleDropdownToggle = this.handleDropdownToggle.bind(this);this.handleDropdownItemClick = this.handleDropdownItemClick.bind(this);this.handleDocumentClick = this.handleDocumentClick.bind(this);this.handleKeydown = this.handleKeydown.bind(this);}init(){if(this.isInitialized){return;}console.log('Initializing Dropdown Manager...');this.initializeBootstrapDropdowns();this.setupEventListeners();this.setupDropdownTracking();this.isInitialized = true;console.log('Dropdown Manager initialized');}initializeBootstrapDropdowns(){if(!window.bootstrap){console.warn('Bootstrap not available,dropdown functionality may be limited');return;}const dropdownToggles = document.querySelectorAll('[data-bs-toggle="dropdown"]');dropdownToggles.forEach(toggle =>{try{const dropdown = new bootstrap.Dropdown(toggle);const dropdownId = toggle.id || `dropdown-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;if(!toggle.id){toggle.id = dropdownId;}this.dropdowns.set(dropdownId,{element: toggle,bootstrap: dropdown,menu: toggle.nextElementSibling || document.querySelector(`[aria-labelledby="${toggle.id}"]`),isOpen: false});console.log(`Initialized dropdown: ${dropdownId}`);}catch(error){console.error('Failed to initialize dropdown:',toggle,error);}});}setupEventListeners(){document.addEventListener('click',(e)=>{const toggle = e.target.closest('[data-bs-toggle="dropdown"]');if(toggle){this.handleDropdownToggle(e,toggle);}});document.addEventListener('click',(e)=>{const dropdownItem = e.target.closest('.dropdown-item');if(dropdownItem){this.handleDropdownItemClick(e,dropdownItem);}});document.addEventListener('click',this.handleDocumentClick);document.addEventListener('keydown',this.handleKeydown);document.addEventListener('show.bs.dropdown',(e)=>{this.onDropdownShow(e);});document.addEventListener('shown.bs.dropdown',(e)=>{this.onDropdownShown(e);});document.addEventListener('hide.bs.dropdown',(e)=>{this.onDropdownHide(e);});document.addEventListener('hidden.bs.dropdown',(e)=>{this.onDropdownHidden(e);});}setupDropdownTracking(){this.dropdowns.forEach((dropdown,id)=>{const{element,menu}= dropdown;element.setAttribute('data-dropdown-id',id);if(menu){menu.setAttribute('data-dropdown-id',id);}});}handleDropdownToggle(event,toggle){const dropdownId = toggle.getAttribute('data-dropdown-id')|| toggle.id;const dropdown = this.dropdowns.get(dropdownId);if(!dropdown){console.warn('Dropdown not found:',dropdownId);return;}this.closeAllDropdowns(dropdownId);}handleDropdownItemClick(event,item){const href = item.getAttribute('href');const action = item.getAttribute('data-action');if(action){event.preventDefault();this.executeAction(action,item);}else if(href && href !== '#'){console.log('Dropdown navigation:',href);}else if(href === '#'){event.preventDefault();}if(!item.closest('.dropdown-submenu')){this.closeDropdownContaining(item);}}executeAction(action,item){console.log('Executing dropdown action:',action);switch(action){case 'logout': this.handleLogout();break;case 'settings': this.navigateToSettings();break;case 'profile': this.navigateToProfile();break;case 'users': this.navigateToUsers();break;default: console.warn('Unknown dropdown action:',action);if(window[action] && typeof window[action] === 'function'){window[action]();}else{console.error('No handler found for action:',action);}break;}}handleLogout(){if(window.aiSecretaryApp && window.aiSecretaryApp.authManager){window.aiSecretaryApp.authManager.handleLogout();}else if(window.logout && typeof window.logout === 'function'){window.logout();}else{console.error('No logout handler available');window.location.href = '/logout';}}navigateToSettings(){if(window.aiSecretaryApp && window.aiSecretaryApp.navigationController){window.aiSecretaryApp.navigationController.navigateTo('/settings');}else{window.location.href = '/settings';}}navigateToProfile(){if(window.aiSecretaryApp && window.aiSecretaryApp.navigationController){window.aiSecretaryApp.navigationController.navigateTo('/profile');}else{window.location.href = '/profile';}}navigateToUsers(){if(window.aiSecretaryApp && window.aiSecretaryApp.navigationController){window.aiSecretaryApp.navigationController.navigateTo('/users');}else{window.location.href = '/users';}}handleDocumentClick(event){const clickedDropdown = event.target.closest('.dropdown');if(!clickedDropdown){this.closeAllDropdowns();}}handleKeydown(event){if(event.key === 'Escape'){this.closeAllDropdowns();}if(this.activeDropdown &&(event.key === 'ArrowDown' || event.key === 'ArrowUp')){event.preventDefault();this.handleArrowKeyNavigation(event.key);}}handleArrowKeyNavigation(key){if(!this.activeDropdown)return;const dropdown = this.dropdowns.get(this.activeDropdown);if(!dropdown || !dropdown.menu)return;const items = dropdown.menu.querySelectorAll('.dropdown-item:not(.disabled)');if(items.length === 0)return;const currentFocus = dropdown.menu.querySelector('.dropdown-item:focus');let currentIndex = currentFocus ? Array.from(items).indexOf(currentFocus): -1;if(key === 'ArrowDown'){currentIndex =(currentIndex + 1)% items.length;}else if(key === 'ArrowUp'){currentIndex = currentIndex <= 0 ? items.length - 1 : currentIndex - 1;}items[currentIndex].focus();}onDropdownShow(event){const toggle = event.target;const dropdownId = toggle.getAttribute('data-dropdown-id')|| toggle.id;const dropdown = this.dropdowns.get(dropdownId);if(dropdown){dropdown.isOpen = true;this.activeDropdown = dropdownId;console.log('Dropdown showing:',dropdownId);}}onDropdownShown(event){const toggle = event.target;const dropdownId = toggle.getAttribute('data-dropdown-id')|| toggle.id;console.log('Dropdown shown:',dropdownId);const dropdown = this.dropdowns.get(dropdownId);if(dropdown && dropdown.menu){const firstItem = dropdown.menu.querySelector('.dropdown-item:not(.disabled)');if(firstItem){}}}onDropdownHide(event){const toggle = event.target;const dropdownId = toggle.getAttribute('data-dropdown-id')|| toggle.id;const dropdown = this.dropdowns.get(dropdownId);if(dropdown){dropdown.isOpen = false;console.log('Dropdown hiding:',dropdownId);}}onDropdownHidden(event){const toggle = event.target;const dropdownId = toggle.getAttribute('data-dropdown-id')|| toggle.id;console.log('Dropdown hidden:',dropdownId);if(this.activeDropdown === dropdownId){this.activeDropdown = null;}}closeAllDropdowns(exceptId = null){this.dropdowns.forEach((dropdown,id)=>{if(id !== exceptId && dropdown.isOpen && dropdown.bootstrap){try{dropdown.bootstrap.hide();}catch(error){console.error('Error closing dropdown:',id,error);}}});}closeDropdownContaining(element){const dropdownMenu = element.closest('.dropdown-menu');if(dropdownMenu){const dropdownId = dropdownMenu.getAttribute('data-dropdown-id');const dropdown = this.dropdowns.get(dropdownId);if(dropdown && dropdown.bootstrap){try{dropdown.bootstrap.hide();}catch(error){console.error('Error closing dropdown:',dropdownId,error);}}}}getDropdownState(dropdownId){const dropdown = this.dropdowns.get(dropdownId);return dropdown ?{id: dropdownId,isOpen: dropdown.isOpen,element: dropdown.element,menu: dropdown.menu}: null;}getAllDropdownStates(){const states ={};this.dropdowns.forEach((dropdown,id)=>{states[id] ={isOpen: dropdown.isOpen,element: dropdown.element,menu: dropdown.menu};});return states;}refresh(){console.log('Refreshing dropdown manager...');this.dropdowns.clear();this.activeDropdown = null;this.initializeBootstrapDropdowns();this.setupDropdownTracking();console.log('Dropdown manager refreshed');}cleanup(){document.removeEventListener('click',this.handleDocumentClick);document.removeEventListener('keydown',this.handleKeydown);this.dropdowns.forEach((dropdown)=>{if(dropdown.bootstrap && typeof dropdown.bootstrap.dispose === 'function'){try{dropdown.bootstrap.dispose();}catch(error){console.error('Error disposing dropdown:',error);}}});this.dropdowns.clear();this.activeDropdown = null;this.isInitialized = false;console.log('Dropdown manager cleaned up');}}window.DropdownManager = DropdownManager;